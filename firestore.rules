rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Règles pour les utilisateurs
    match /users/{userId} {
      // Lecture: un utilisateur ne peut lire que son propre document
      allow read: if request.auth != null && request.auth.uid == userId;

      // Mise à jour par l'utilisateur lui-même, sans pouvoir modifier isAdmin
      // Approche compatible: on autorise uniquement si isAdmin reste identique
      allow update: if request.auth != null
                    && request.auth.uid == userId
                    && (request.resource.data.isAdmin == resource.data.isAdmin);

      // Règle spéciale: seuls les admins existants peuvent modifier isAdmin
      allow update: if request.auth != null
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;

      // Création du document utilisateur: autorisée pour l'utilisateur connecté
      allow create: if request.auth != null && request.auth.uid == userId
                    && !(('isAdmin' in request.resource.data) && request.resource.data.isAdmin == true);

      // Access to subcollections (own tree only)
      match /{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Règles pour les sessions en attente (authentification mobile)
    match /pending_sessions/{sessionId} {
      // Permettre la création par tout utilisateur authentifié
      allow create: if request.auth != null;
      
      // Permettre la lecture/mise à jour par tout utilisateur authentifié
      allow read, update: if request.auth != null;
      
      // Auto-nettoyage après expiration (optionnel)
      allow delete: if request.auth != null;
    }
  }
}
